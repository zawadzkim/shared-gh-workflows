name: Reusable Python Release

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Directory containing the Python project'
        type: string
        default: '.'
      publish:
        description: 'Whether to publish to PyPI and create GitHub release'
        type: boolean
        default: false
    secrets:
      PYPI_TOKEN:
        description: 'PyPI API token for publishing'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Extract version
        id: extract_version
        run: |
          version=$(poetry version -s)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: poetry build

  publish:
    needs: build
    if: inputs.publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: Release ${{ needs.build.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry build
          poetry publish