name: Reusable MkDocs Deploy

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Directory containing the MkDocs project'
        type: string
        default: '.'
      python-version:
        description: 'Python version to use'
        type: string
        default: '3.11'
      poetry-install-args:
        description: 'Additional arguments for poetry install'
        type: string
        default: '--with docs'
      deploy:
        description: 'Whether to deploy to GitHub Pages or just build'
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      
      - name: Install dependencies
        run: poetry install ${{ inputs.poetry-install-args }}
      
      - name: Configure Git
        if: inputs.deploy
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Get version
        id: get_version
        run: |
          version=$(poetry version -s)
          echo "version=$version" >> $GITHUB_OUTPUT
          
      - name: Build and deploy documentation
        if: inputs.deploy
        run: |
          poetry run mike deploy --push --update-aliases ${{ steps.get_version.outputs.version }} latest
          poetry run mike set-default --push latest
        
      - name: Build documentation (no deploy)
        if: "!inputs.deploy"
        run: poetry run mike list
      
      - name: Upload Pages artifact
        if: inputs.deploy
        uses: actions/upload-pages-artifact@v4
        with:
          path: ${{ inputs.working-directory }}/site

      - name: Upload build artifact for debugging
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: ${{ inputs.working-directory }}/site
          retention-days: 1

  deploy:
    needs: build
    if: inputs.deploy
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
      contents: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4