name: Reusable MkDocs Deploy

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Directory containing the MkDocs project'
        type: string
        default: '.'
      python-version:
        description: 'Python version to use'
        type: string
        default: '3.11'
      poetry-install-args:
        description: 'Additional arguments for poetry install'
        type: string
        default: '--with docs'
      deploy:
        description: 'Whether to deploy to GitHub Pages or just build'
        type: boolean
        default: false


jobs:
  docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      
      - name: Install dependencies
        run: poetry install ${{ inputs.poetry-install-args }}
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Get version
        id: get_version
        run: |
          version=$(poetry version -s)
          echo "version=$version" >> $GITHUB_OUTPUT
          
      - name: Build documentation
        run: |
          # Build the site first
          poetry run mkdocs build
          
          # Configure and build with mike
          poetry run mike deploy --branch gh-pages ${{ steps.get_version.outputs.version }} latest --update-alias
          poetry run mike set-default --branch gh-pages latest
          
          # Debug info
          echo "Checking site output:"
          ls -la site
          
          # List versions
          poetry run mike list --branch gh-pages

      - name: Upload GitHub Pages artifact
        if: inputs.deploy
        uses: actions/upload-pages-artifact@v3
        with:
          path: './site'

      - name: Deploy to GitHub Pages
        if: inputs.deploy
        id: deployment
        uses: actions/deploy-pages@v4
